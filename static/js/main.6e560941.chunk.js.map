{"version":3,"sources":["api/index.js","components/inputs/Button/index.js","components/inputs/BaseInput/index.js","components/inputs/Input/index.js","components/inputs/ComboBox/index.js","components/inputs/Select/index.js","components/FormRenderer/index.js","Dashboard/ResourceSearch/index.js","components/Table/index.js","Dashboard/NavBar/NavItem/index.js","Dashboard/NavBar/index.js","Dashboard/index.js","App.js","serviceWorker.js","index.js","components/inputs/Select/Select.module.scss","components/inputs/ComboBox/ComboBox.module.scss","components/Table/Table.module.scss","components/FormRenderer/FormRenderer.module.scss","Dashboard/ResourceSearch/ResourceSearch.module.scss","Dashboard/NavBar/NavItem/NavItem.module.scss","components/inputs/BaseInput/BaseInput.module.scss","Dashboard/Dashboard.module.scss","Dashboard/NavBar/NavBar.module.scss","components/inputs/Button/Button.module.scss","components/inputs/Input/Input.module.scss"],"names":["instance","axios","create","baseURL","timeout","getResourceTypes","get","getRichnessTypes","Button","className","type","children","props","classNames","styles","button","BaseInput","React","forwardRef","ref","label","name","active","useState","hasFocus","setHasFocus","childRef","useRef","useEffect","current","addEventListener","inputWrapper","onClick","focus","htmlFor","Input","onChange","inputProps","input","e","currentTarget","value","spellcheck","ComboBox","items","placeholder","inputItems","setInputItems","useCombobox","selectedItem","onSelectedItemChange","onInputValueChange","inputValue","filter","item","toLowerCase","startsWith","isOpen","getMenuProps","setInputValue","closeMenu","getInputProps","getToggleButtonProps","getComboboxProps","highlightedIndex","getItemProps","combobox","dropdownIcon","size","menu","open","map","index","highlighted","key","Select","useSelect","inputTypes","select","FormRenderer","config","onSubmit","initialValues","useMemo","fields","reduce","acc","field","initialValue","validationSchema","validation","setFieldValue","form","Component","msg","error","submitBtn","ResourceSearchSchema","Yup","shape","resourceType","required","richness","ResourceSearch","useQuery","resourceTypesLoading","loading","resourceTypesError","resourceTypesData","data","richnessTypesLoading","richnessTypesError","richnessTypesData","resourceTypes","resourceTypesOptions","replace","trim","richnessTypes","richnessTypesOptions","message","formConfig","resourceSearchForm","resourceSearch","Table","columns","useTable","getTableProps","getTableBodyProps","headerGroups","rows","prepareRow","tableWrapper","table","headers","headerGroup","getHeaderGroupProps","column","headerCell","style","getHeaderProps","render","body","row","i","getRowProps","cells","cell","getCellProps","NavItem","selected","Logo","logo","navItem","navItems","IoMdPlanet","NavBar","route","setRoute","navBar","src","process","alt","Dashboard","selectedRoute","setSelectedRoute","setData","Header","accessor","textAlign","dashboard","results","header","values","getResources","then","App","initialIsOpen","Boolean","window","location","hostname","match","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","console","module","exports"],"mappings":"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","file":"static/js/main.6e560941.chunk.js","sourcesContent":["import axios from \"axios\";\n\nconst baseURL = \"https://everaiders.azurewebsites.net/\";\n\nconst instance = axios.create({\n  baseURL,\n  timeout: 30000,\n});\n\nexport const getPlanetData = () => instance.get(\"/api/planets\");\n\nexport const getResourceTypes = () =>\n  instance.get(\"/api/Planets/resources/types\");\n\nexport const getRichnessTypes = () =>\n  instance.get(\"/api/Planets/resources/richnesstypes\");\n\nexport const getResources = ({ resourceType, richness }) =>\n  instance.get(\n    `/api/Planets/resources/${resourceType.replace(/\\s+/g, \"\")}/${richness}`\n  );\n","import React from \"react\";\nimport classNames from \"classnames\";\nimport styles from \"./Button.module.scss\";\n\nconst Button = ({ className, type = \"button\", children, ...props }) => (\n  <button\n    className={classNames(className, styles.button)}\n    type={type}\n    {...props}\n  >\n    {children}\n  </button>\n);\n\nexport default Button;\n","import React, { useState, useRef, useEffect } from \"react\";\nimport classNames from \"classnames\";\nimport styles from \"./BaseInput.module.scss\";\n\nconst BaseInput = React.forwardRef(\n  ({ className, label, name, active, children, ...props }, ref) => {\n    const [hasFocus, setHasFocus] = useState(false);\n    const childRef = useRef();\n\n    useEffect(() => {\n      if (childRef.current) {\n        childRef.current.addEventListener(\"focus\", () => {\n          setHasFocus(true);\n        });\n\n        childRef.current.addEventListener(\"blur\", () => {\n          setHasFocus(false);\n        });\n      }\n\n      return setHasFocus;\n    }, []);\n\n    return (\n      <div\n        ref={ref}\n        className={classNames(className, styles.inputWrapper, {\n          [styles.active]: hasFocus || active,\n        })}\n        onClick={() => {\n          childRef.current.focus();\n        }}\n        {...props}\n      >\n        <label className={styles.label} htmlFor={name}>\n          {label}\n        </label>\n        {children(childRef)}\n      </div>\n    );\n  }\n);\n\nexport default BaseInput;\n","import React from \"react\";\nimport BaseInput from \"../BaseInput\";\nimport styles from \"./Input.module.scss\";\n\nconst Input = ({ className, label, onChange, ...inputProps }) => (\n  <BaseInput className={className} label={label} name={inputProps.name}>\n    {(ref) => (\n      <input\n        ref={ref}\n        className={styles.input}\n        onChange={(e) => onChange(e.currentTarget.value)}\n        spellcheck=\"false\"\n        {...inputProps}\n      />\n    )}\n  </BaseInput>\n);\n\nexport default Input;\n","import React, { useState, useEffect } from \"react\";\nimport { useCombobox } from \"downshift\";\nimport BaseInput from \"../BaseInput\";\nimport classNames from \"classnames\";\nimport styles from \"./ComboBox.module.scss\";\nimport { MdExpandMore } from \"react-icons/md\";\n\nconst ComboBox = ({\n  className,\n  label,\n  items,\n  name,\n  placeholder,\n  value,\n  onChange,\n}) => {\n  const [inputItems, setInputItems] = useState(items);\n\n  const {\n    isOpen,\n    selectedItem,\n    setInputValue,\n    closeMenu,\n    getMenuProps,\n    getInputProps,\n    getToggleButtonProps,\n    getComboboxProps,\n    highlightedIndex,\n    getItemProps,\n  } = useCombobox({\n    items: inputItems,\n    selectedItem: value,\n    onSelectedItemChange: ({ selectedItem }) => {\n      onChange(selectedItem);\n    },\n    onInputValueChange: ({ inputValue }) => {\n      setInputItems(\n        items.filter((item) =>\n          item.toLowerCase().startsWith(inputValue.toLowerCase())\n        )\n      );\n    },\n  });\n\n  useEffect(() => {\n    setInputItems(items);\n  }, [items]);\n\n  return (\n    <div className={className}>\n      <BaseInput label={label} name={name}>\n        {(ref) => (\n          <div className={styles.combobox} {...getComboboxProps()}>\n            <input\n              className={styles.input}\n              spellcheck=\"false\"\n              {...getInputProps({\n                name,\n                placeholder,\n                ref,\n              })}\n            />\n            <div\n              className={styles.dropdownIcon}\n              {...getToggleButtonProps({\n                onClick: () => setInputItems(items),\n              })}\n            >\n              <MdExpandMore size={16} />\n            </div>\n          </div>\n        )}\n      </BaseInput>\n\n      <ul\n        {...getMenuProps()}\n        className={classNames(styles.menu, { [styles.open]: isOpen })}\n      >\n        {isOpen &&\n          inputItems.map((item, index) => (\n            <li\n              className={classNames(styles.item, {\n                [styles.highlighted]: highlightedIndex === index,\n              })}\n              key={`${item}${index}`}\n              {...getItemProps({\n                item,\n                index,\n              })}\n            >\n              {item}\n            </li>\n          ))}\n      </ul>\n    </div>\n  );\n};\n\nexport default ComboBox;\n","import React from \"react\";\nimport { useSelect } from \"downshift\";\nimport BaseInput from \"../BaseInput\";\nimport classNames from \"classnames\";\nimport { MdExpandMore } from \"react-icons/md\";\nimport styles from \"./Select.module.scss\";\n\nconst Select = ({\n  className,\n  label,\n  items,\n  name,\n  placeholder,\n  value,\n  onChange,\n}) => {\n  const {\n    isOpen,\n    selectedItem,\n    getToggleButtonProps,\n    getMenuProps,\n    highlightedIndex,\n    getItemProps,\n  } = useSelect({\n    items,\n    selectedItem: value,\n    onSelectedItemChange: ({ selectedItem }) => {\n      onChange(selectedItem);\n    },\n  });\n\n  return (\n    <div className={className}>\n      <BaseInput\n        className={styles.inputWrapper}\n        active={isOpen}\n        label={label}\n        name={name}\n        {...getToggleButtonProps()}\n      >\n        {(ref) => (\n          <button ref={ref} className={styles.input} type=\"button\">\n            {selectedItem || (\n              <span className={styles.placeholder}>{placeholder}</span>\n            )}\n            <MdExpandMore className={styles.dropdownIcon} size={16} />\n          </button>\n        )}\n      </BaseInput>\n      <ul\n        {...getMenuProps()}\n        className={classNames(styles.menu, { [styles.open]: isOpen })}\n      >\n        {isOpen &&\n          items.map((item, index) => (\n            <li\n              className={classNames(styles.item, {\n                [styles.highlighted]: highlightedIndex === index,\n              })}\n              key={`${item}${index}`}\n              {...getItemProps({\n                item,\n                index,\n              })}\n            >\n              {item}\n            </li>\n          ))}\n      </ul>\n    </div>\n  );\n};\n\nexport default Select;\n","import React, { useMemo } from \"react\";\nimport classNames from \"classnames\";\nimport Button from \"../inputs/Button\";\nimport { Formik, Form, Field, ErrorMessage } from \"formik\";\nimport Input from \"../../components/inputs/Input\";\nimport ComboBox from \"../inputs/ComboBox\";\nimport Select from \"../inputs/Select\";\nimport { MdErrorOutline } from \"react-icons/md\";\nimport styles from \"./FormRenderer.module.scss\";\n\nconst inputTypes = {\n  select: Select,\n  combobox: ComboBox,\n  \"*\": Input,\n};\n\nconst FormRenderer = ({ config, onSubmit }) => {\n  const initialValues = useMemo(\n    () =>\n      config.fields.reduce((acc, field) => {\n        acc[field.name] = field.initialValue || \"\";\n        return acc;\n      }, {}),\n    [config]\n  );\n\n  return (\n    <Formik\n      validationSchema={config.validation}\n      initialValues={initialValues}\n      onSubmit={onSubmit}\n    >\n      {({ setFieldValue }) => (\n        <Form className={classNames(styles.form, config.className)}>\n          {config.fields.map(\n            ({ className, name, label, type, ...inputProps }) => (\n              <div className={classNames(styles.field, className)} key={name}>\n                <Field name={name}>\n                  {({ field }) => {\n                    const Component = inputTypes[type] || inputTypes[\"*\"];\n                    return (\n                      <Component\n                        key={name}\n                        label={label}\n                        type={type}\n                        {...field}\n                        {...inputProps}\n                        onChange={(value) => setFieldValue(name, value)}\n                      />\n                    );\n                  }}\n                </Field>\n                <ErrorMessage name={name}>\n                  {(msg) => (\n                    <div className={styles.error}>\n                      <MdErrorOutline /> {msg}\n                    </div>\n                  )}\n                </ErrorMessage>\n              </div>\n            )\n          )}\n          <Button className={styles.submitBtn} type=\"submit\">\n            Submit\n          </Button>\n        </Form>\n      )}\n    </Formik>\n  );\n};\n\nexport default FormRenderer;\n","import React, { useMemo } from \"react\";\nimport FormRenderer from \"../../components/FormRenderer\";\nimport { getResourceTypes, getRichnessTypes } from \"../../api\";\nimport { useQuery } from \"react-query\";\nimport * as Yup from \"yup\";\nimport styles from \"./ResourceSearch.module.scss\";\n\nconst ResourceSearchSchema = Yup.object().shape({\n  resourceType: Yup.string().required(\"Resource Type is required\"),\n  richness: Yup.string().required(\"Richness is required\"),\n});\n\nconst ResourceSearch = ({ onSubmit }) => {\n  const {\n    loading: resourceTypesLoading,\n    error: resourceTypesError,\n    data: resourceTypesData,\n  } = useQuery(\"resourceTypes\", getResourceTypes);\n\n  const {\n    loading: richnessTypesLoading,\n    error: richnessTypesError,\n    data: richnessTypesData,\n  } = useQuery(\"richnessTypes\", getRichnessTypes);\n\n  const resourceTypes = useMemo(\n    () => (resourceTypesData ? resourceTypesData.data : []),\n    [resourceTypesData]\n  );\n\n  const resourceTypesOptions = useMemo(\n    () => [\n      ...resourceTypes.map((type) => type.replace(/([A-Z])/g, \" $1\").trim()),\n    ],\n    [resourceTypes]\n  );\n\n  const richnessTypes = useMemo(\n    () => (richnessTypesData ? richnessTypesData.data : []),\n    [richnessTypesData]\n  );\n\n  const richnessTypesOptions = useMemo(\n    () => [\n      ...richnessTypes.map((type) => type.replace(/([A-Z])/g, \" $1\").trim()),\n    ],\n    [richnessTypes]\n  );\n\n  if (resourceTypesLoading || richnessTypesLoading) return \"Loading...\";\n\n  if (resourceTypesError || richnessTypesError)\n    return (\n      \"An error has occurred: \" + resourceTypesError?.message ||\n      richnessTypesError?.message\n    );\n\n  const formConfig = {\n    validation: ResourceSearchSchema,\n    className: styles.resourceSearchForm,\n    fields: [\n      {\n        name: \"resourceType\",\n        label: \"Resource Type\",\n        placeholder: \"resource type\",\n        type: \"combobox\",\n        items: resourceTypesOptions,\n        className: styles.resourceType,\n      },\n      {\n        name: \"richness\",\n        label: \"Richness\",\n        placeholder: \"Select a richness\",\n        items: richnessTypesOptions,\n        type: \"select\",\n        className: styles.richness,\n      },\n      // {\n      //   name: \"limit\",\n      //   label: \"Limit\",\n      //   placeholder: \"Select a limit\",\n      //   items: [20, 50, 100, 200],\n      //   type: \"select\",\n      // },\n    ],\n  };\n\n  return (\n    <div className={styles.resourceSearch}>\n      <h1>Find Resources</h1>\n      <FormRenderer config={formConfig} onSubmit={onSubmit} />\n    </div>\n  );\n};\n\nexport default ResourceSearch;\n","import React from \"react\";\nimport { useTable } from \"react-table\";\nimport styles from \"./Table.module.scss\";\n\nconst Table = ({ data, columns }) => {\n  const {\n    getTableProps,\n    getTableBodyProps,\n    headerGroups,\n    rows,\n    prepareRow,\n  } = useTable({\n    columns,\n    data,\n  });\n\n  return (\n    <div className={styles.tableWrapper}>\n      <table className={styles.table} {...getTableProps()}>\n        <thead className={styles.headers}>\n          {headerGroups.map((headerGroup) => (\n            <tr {...headerGroup.getHeaderGroupProps()}>\n              {headerGroup.headers.map((column) => (\n                <th\n                  className={styles.headerCell}\n                  style={column.style || {}}\n                  {...column.getHeaderProps()}\n                >\n                  {column.render(\"Header\")}\n                </th>\n              ))}\n            </tr>\n          ))}\n        </thead>\n        <tbody className={styles.body} {...getTableBodyProps()}>\n          {rows.map((row, i) => {\n            prepareRow(row);\n            return (\n              <tr className={styles.row} {...row.getRowProps()}>\n                {row.cells.map((cell) => {\n                  return (\n                    <td\n                      className={styles.cell}\n                      style={cell.column.style || {}}\n                      {...cell.getCellProps()}\n                    >\n                      {cell.render(\"Cell\")}\n                    </td>\n                  );\n                })}\n              </tr>\n            );\n          })}\n        </tbody>\n      </table>\n    </div>\n  );\n};\n\nexport default Table;\n","import React from \"react\";\nimport classNames from \"classnames\";\nimport styles from \"./NavItem.module.scss\";\n\nconst NavItem = ({ selected, onClick, logo: Logo, label }) => (\n  <div\n    className={classNames(styles.navItem, { [styles.active]: selected })}\n    onClick={() => onClick()}\n  >\n    <div className={styles.logo}>\n      <Logo />\n    </div>\n    <div className={styles.label}>{label}</div>\n  </div>\n);\n\nexport default NavItem;\n","import React from \"react\";\nimport { IoMdPlanet } from \"react-icons/io\";\nimport NavItem from \"./NavItem\";\nimport styles from \"./NavBar.module.scss\";\n\nconst navItems = [\n  {\n    name: \"resource-search\",\n    label: \"Resource Search\",\n    logo: IoMdPlanet,\n  },\n];\n\nconst NavBar = ({ route, setRoute }) => (\n  <div className={styles.navBar}>\n    <img\n      className={styles.logo}\n      src={`${process.env.PUBLIC_URL}/logo.png`}\n      alt=\"raiders logo\"\n    />\n    {navItems.map((item) => (\n      <NavItem\n        key={item.name}\n        selected={route === item.name}\n        onClick={() => setRoute(item.name)}\n        logo={item.logo}\n        label={item.label}\n      />\n    ))}\n  </div>\n);\n\nexport default NavBar;\n","import React, { useState, useMemo } from \"react\";\nimport { getResources } from \"../api\";\nimport ResourceSearch from \"./ResourceSearch\";\nimport Table from \"../components/Table\";\nimport NavBar from \"./NavBar\";\nimport styles from \"./Dashboard.module.scss\";\n\nconst Dashboard = () => {\n  const [selectedRoute, setSelectedRoute] = useState(\"resource-search\");\n  const [data, setData] = useState([]);\n\n  const getData = (values) => {\n    getResources(values).then(({ data }) => setData(data));\n  };\n\n  const columns = useMemo(\n    () => [\n      {\n        Header: \"Jumps\",\n        accessor: \"distanceFromBase\",\n        style: {\n          textAlign: \"right\",\n        },\n      },\n      {\n        Header: \"Planet Name\",\n        accessor: \"planetName\",\n        style: {\n          textAlign: \"left\",\n        },\n      },\n      {\n        Header: \"Resource Type\",\n        accessor: \"resourceType\",\n        style: {\n          textAlign: \"left\",\n        },\n      },\n      {\n        Header: \"Richness\",\n        accessor: \"richness\",\n        style: {\n          textAlign: \"left\",\n        },\n      },\n    ],\n    []\n  );\n\n  return (\n    <div className={styles.dashboard}>\n      <div className={styles.results}>\n        <Table data={data} columns={columns} />\n      </div>\n      <header className={styles.header}>\n        <ResourceSearch onSubmit={getData} />\n      </header>\n      <NavBar route={selectedRoute} setRoute={setSelectedRoute} />\n    </div>\n  );\n};\n\nexport default Dashboard;\n","import React from \"react\";\nimport Dashboard from \"./Dashboard\";\nimport { ReactQueryDevtools } from \"react-query-devtools\";\nimport \"./App.scss\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <ReactQueryDevtools initialIsOpen={false} />\n      <Dashboard />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener(\"load\", () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            \"This web app is being served cache-first by a service \" +\n              \"worker. To learn more, visit https://bit.ly/CRA-PWA\"\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === \"installed\") {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                \"New content is available and will be used when all \" +\n                  \"tabs for this page are closed. See https://bit.ly/CRA-PWA.\"\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log(\"Content is cached for offline use.\");\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error(\"Error during service worker registration:\", error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { \"Service-Worker\": \"script\" },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get(\"content-type\");\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf(\"javascript\") === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        \"No internet connection found. App is running in offline mode.\"\n      );\n    });\n}\n\nexport function unregister() {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.scss\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"combobox\":\"Select_combobox__2fVaR\",\"inputWrapper\":\"Select_inputWrapper__2jpws\",\"input\":\"Select_input__3xpvd\",\"dropdownIcon\":\"Select_dropdownIcon__Emqpy\",\"menu\":\"Select_menu__3w-dz\",\"open\":\"Select_open__gibbM\",\"item\":\"Select_item__3YpSq\",\"highlighted\":\"Select_highlighted__cGxYx\",\"placeholder\":\"Select_placeholder__VZlSA\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"combobox\":\"ComboBox_combobox__vKPv6\",\"input\":\"ComboBox_input__32-1j\",\"menu\":\"ComboBox_menu__1H2fX\",\"open\":\"ComboBox_open__2oJ2D\",\"dropdownIcon\":\"ComboBox_dropdownIcon__2yDOs\",\"item\":\"ComboBox_item__1aND1\",\"highlighted\":\"ComboBox_highlighted__dIQ44\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"tableWrapper\":\"Table_tableWrapper__tZooT\",\"table\":\"Table_table__2OuB7\",\"headers\":\"Table_headers__M46s0\",\"headerCell\":\"Table_headerCell__1nTkK\",\"body\":\"Table_body__3kRrD\",\"cell\":\"Table_cell__2s5cE\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"FormRenderer_form__1oXro\",\"field\":\"FormRenderer_field__2ebEy\",\"error\":\"FormRenderer_error__3EXkk\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"resourceSearch\":\"ResourceSearch_resourceSearch__34jlA\",\"resourceSearchForm\":\"ResourceSearch_resourceSearchForm__280Hw\",\"resourceType\":\"ResourceSearch_resourceType__1elrh\",\"richness\":\"ResourceSearch_richness__L3K6U\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"navItem\":\"NavItem_navItem__Mxr-P\",\"hover\":\"NavItem_hover__2jylu\",\"active\":\"NavItem_active__BRtlX\",\"label\":\"NavItem_label__NjeuJ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"inputWrapper\":\"BaseInput_inputWrapper__1QLek\",\"hover\":\"BaseInput_hover__fgPLf\",\"active\":\"BaseInput_active__3J2K6\",\"label\":\"BaseInput_label__ljkWO\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dashboard\":\"Dashboard_dashboard__1wLSR\",\"header\":\"Dashboard_header__3c0hx\",\"results\":\"Dashboard_results__1w2qx\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"navBar\":\"NavBar_navBar__cg89M\",\"logo\":\"NavBar_logo__1hftJ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"Button_button__3Dwi5\",\"hover\":\"Button_hover__2_H-W\",\"active\":\"Button_active__19R-U\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"input\":\"Input_input__1NUtq\"};"],"sourceRoot":""}