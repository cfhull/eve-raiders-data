{"version":3,"sources":["components/Table/index.js","components/inputs/Button/index.js","components/inputs/BaseInput/index.js","components/inputs/Input/index.js","components/inputs/ComboBox/index.js","components/inputs/Select/index.js","components/FormRenderer/index.js","api/index.js","Dashboard/ResourceSearch/index.js","Dashboard/UnderDevelopment/index.js","Dashboard/NavBar/NavItem/index.js","Dashboard/NavBar/index.js","Dashboard/index.js","App.js","serviceWorker.js","index.js","components/Table/Table.module.scss","components/inputs/Select/Select.module.scss","Dashboard/ResourceSearch/ResourceSearch.module.scss","components/inputs/ComboBox/ComboBox.module.scss","components/FormRenderer/FormRenderer.module.scss","Dashboard/NavBar/NavItem/NavItem.module.scss","components/inputs/BaseInput/BaseInput.module.scss","Dashboard/NavBar/NavBar.module.scss","components/inputs/Button/Button.module.scss","components/inputs/Input/Input.module.scss","Dashboard/Dashboard.module.scss"],"names":["Table","data","columns","placeholder","useTable","getTableProps","getTableBodyProps","headerGroups","rows","prepareRow","className","styles","tableWrapper","table","headers","map","headerGroup","getHeaderGroupProps","column","headerCell","style","getHeaderProps","render","body","row","i","getRowProps","cells","cell","getCellProps","length","Button","type","children","props","classNames","button","BaseInput","React","forwardRef","ref","label","name","active","useState","hasFocus","setHasFocus","childRef","useRef","useEffect","current","addEventListener","inputWrapper","onClick","focus","htmlFor","Input","onChange","inputProps","input","e","currentTarget","value","spellCheck","ComboBox","items","itemToString","item","inputItems","setInputItems","useCombobox","selectedItem","onSelectedItemChange","onInputValueChange","inputValue","filter","toLowerCase","startsWith","isOpen","getMenuProps","getInputProps","getToggleButtonProps","getComboboxProps","highlightedIndex","getItemProps","combobox","dropdownIcon","size","menu","open","index","highlighted","key","Select","useSelect","inputTypes","select","FormRenderer","config","onSubmit","loading","initialValues","useMemo","fields","reduce","acc","field","initialValue","validationSchema","validation","setFieldValue","form","Component","msg","error","submitBtn","disabled","visibility","loader","position","top","left","color","getComputedStyle","document","documentElement","getPropertyValue","instance","axios","create","baseURL","timeout","getFilters","get","ResourceSearchSchema","Yup","shape","resourceType","required","richness","ResourceSearch","setData","setError","setLoading","Header","accessor","textAlign","Cell","replace","trim","useQuery","filtersLoading","filtersError","filtersTypesData","regions","types","resourceTypeOptions","message","formConfig","resourceSearchForm","region","resourceSearch","results","header","values","id","params","regionId","getResources","then","catch","finally","UnderDevelopment","marginTop","NavItem","selected","Logo","logo","navItem","navItems","GiMining","IoMdPlanet","NavBar","route","setRoute","navBar","src","process","alt","routes","Dashboard","selectedRoute","setSelectedRoute","dashboard","App","initialIsOpen","Boolean","window","location","hostname","match","ReactDOM","StrictMode","getElementById","navigator","serviceWorker","ready","registration","unregister","console","module","exports"],"mappings":"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","file":"static/js/main.042aebd2.chunk.js","sourcesContent":["import React from \"react\";\nimport { useTable } from \"react-table\";\nimport styles from \"./Table.module.scss\";\n\nconst Table = ({ data, columns, placeholder }) => {\n  const {\n    getTableProps,\n    getTableBodyProps,\n    headerGroups,\n    rows,\n    prepareRow,\n  } = useTable({\n    columns,\n    data,\n  });\n\n  return (\n    <div className={styles.tableWrapper}>\n      <table className={styles.table} {...getTableProps()}>\n        <thead className={styles.headers}>\n          {headerGroups.map((headerGroup) => (\n            <tr {...headerGroup.getHeaderGroupProps()}>\n              {headerGroup.headers.map((column) => (\n                <th\n                  className={styles.headerCell}\n                  style={column.style || {}}\n                  {...column.getHeaderProps()}\n                >\n                  {column.render(\"Header\")}\n                </th>\n              ))}\n            </tr>\n          ))}\n        </thead>\n        <tbody className={styles.body} {...getTableBodyProps()}>\n          {rows.map((row, i) => {\n            prepareRow(row);\n            return (\n              <tr className={styles.row} {...row.getRowProps()}>\n                {row.cells.map((cell) => {\n                  return (\n                    <td\n                      className={styles.cell}\n                      style={cell.column.style || {}}\n                      {...cell.getCellProps()}\n                    >\n                      {cell.render(\"Cell\")}\n                    </td>\n                  );\n                })}\n              </tr>\n            );\n          })}\n        </tbody>\n      </table>\n      {rows.length === 0 && (\n        <div className={styles.placeholder}>{placeholder}</div>\n      )}\n    </div>\n  );\n};\n\nexport default Table;\n","import React from \"react\";\nimport classNames from \"classnames\";\nimport styles from \"./Button.module.scss\";\n\nconst Button = ({ className, type = \"button\", children, ...props }) => (\n  <button\n    className={classNames(className, styles.button)}\n    type={type}\n    {...props}\n  >\n    {children}\n  </button>\n);\n\nexport default Button;\n","import React, { useState, useRef, useEffect } from \"react\";\nimport classNames from \"classnames\";\nimport styles from \"./BaseInput.module.scss\";\n\nconst BaseInput = React.forwardRef(\n  ({ className, label, name, active, children, ...props }, ref) => {\n    const [hasFocus, setHasFocus] = useState(false);\n    const childRef = useRef();\n\n    useEffect(() => {\n      if (childRef.current) {\n        childRef.current.addEventListener(\"focus\", () => {\n          setHasFocus(true);\n        });\n\n        childRef.current.addEventListener(\"blur\", () => {\n          setHasFocus(false);\n        });\n      }\n\n      return setHasFocus;\n    }, []);\n\n    return (\n      <div\n        ref={ref}\n        className={classNames(className, styles.inputWrapper, {\n          [styles.active]: hasFocus || active,\n        })}\n        onClick={() => {\n          childRef.current.focus();\n        }}\n        {...props}\n      >\n        <label className={styles.label} htmlFor={name}>\n          {label}\n        </label>\n        {children(childRef)}\n      </div>\n    );\n  }\n);\n\nexport default BaseInput;\n","import React from \"react\";\nimport BaseInput from \"../BaseInput\";\nimport styles from \"./Input.module.scss\";\n\nconst Input = ({ className, label, onChange, ...inputProps }) => (\n  <BaseInput className={className} label={label} name={inputProps.name}>\n    {(ref) => (\n      <input\n        ref={ref}\n        className={styles.input}\n        onChange={(e) => onChange(e.currentTarget.value)}\n        spellCheck=\"false\"\n        {...inputProps}\n      />\n    )}\n  </BaseInput>\n);\n\nexport default Input;\n","import React, { useState, useEffect } from \"react\";\nimport { useCombobox } from \"downshift\";\nimport BaseInput from \"../BaseInput\";\nimport classNames from \"classnames\";\nimport styles from \"./ComboBox.module.scss\";\nimport { MdExpandMore } from \"react-icons/md\";\n\nconst ComboBox = ({\n  className,\n  label,\n  items = [],\n  name,\n  placeholder,\n  value,\n  onChange,\n  itemToString = (item) => item,\n}) => {\n  const [inputItems, setInputItems] = useState(items);\n\n  const {\n    isOpen,\n    getMenuProps,\n    getInputProps,\n    getToggleButtonProps,\n    getComboboxProps,\n    highlightedIndex,\n    getItemProps,\n  } = useCombobox({\n    itemToString: (item) => (item ? itemToString(item) : \"\"),\n    items: inputItems,\n    selectedItem: value,\n    onSelectedItemChange: ({ selectedItem }) => {\n      onChange(selectedItem);\n    },\n    onInputValueChange: ({ inputValue }) => {\n      setInputItems(\n        items.filter((item) =>\n          itemToString(item).toLowerCase().startsWith(inputValue.toLowerCase())\n        )\n      );\n    },\n  });\n\n  return (\n    <div className={className}>\n      <BaseInput label={label} name={name}>\n        {(ref) => (\n          <div className={styles.combobox} {...getComboboxProps()}>\n            <input\n              className={styles.input}\n              spellCheck=\"false\"\n              {...getInputProps({\n                name,\n                placeholder,\n                ref,\n              })}\n            />\n            <div\n              className={styles.dropdownIcon}\n              {...getToggleButtonProps({\n                onClick: () => setInputItems(items),\n              })}\n            >\n              <MdExpandMore size={16} />\n            </div>\n          </div>\n        )}\n      </BaseInput>\n\n      <ul\n        {...getMenuProps()}\n        className={classNames(styles.menu, { [styles.open]: isOpen })}\n      >\n        {isOpen &&\n          inputItems.map((item, index) => (\n            <li\n              className={classNames(styles.item, {\n                [styles.highlighted]: highlightedIndex === index,\n              })}\n              key={`${itemToString(item)}${index}`}\n              {...getItemProps({\n                item: itemToString(item),\n                index,\n              })}\n            >\n              {itemToString(item)}\n            </li>\n          ))}\n      </ul>\n    </div>\n  );\n};\n\nexport default ComboBox;\n","import React from \"react\";\nimport { useSelect } from \"downshift\";\nimport BaseInput from \"../BaseInput\";\nimport classNames from \"classnames\";\nimport { MdExpandMore } from \"react-icons/md\";\nimport styles from \"./Select.module.scss\";\n\nconst Select = ({\n  className,\n  label,\n  items = [],\n  name,\n  placeholder,\n  value,\n  onChange,\n  itemToString = (item) => item,\n}) => {\n  const {\n    isOpen,\n    selectedItem,\n    getToggleButtonProps,\n    getMenuProps,\n    highlightedIndex,\n    getItemProps,\n  } = useSelect({\n    itemToString,\n    items,\n    selectedItem: value,\n    onSelectedItemChange: ({ selectedItem }) => {\n      onChange(selectedItem);\n    },\n  });\n\n  return (\n    <div className={className}>\n      <BaseInput\n        className={styles.inputWrapper}\n        active={isOpen}\n        label={label}\n        name={name}\n        {...getToggleButtonProps()}\n      >\n        {(ref) => (\n          <button ref={ref} className={styles.input} type=\"button\">\n            {selectedItem || (\n              <span className={styles.placeholder}>{placeholder}</span>\n            )}\n            <MdExpandMore className={styles.dropdownIcon} size={16} />\n          </button>\n        )}\n      </BaseInput>\n      <ul\n        {...getMenuProps()}\n        className={classNames(styles.menu, { [styles.open]: isOpen })}\n      >\n        {isOpen &&\n          items.map((item, index) => (\n            <li\n              className={classNames(styles.item, {\n                [styles.highlighted]: highlightedIndex === index,\n              })}\n              key={`${item}${index}`}\n              {...getItemProps({\n                item,\n                index,\n              })}\n            >\n              {item}\n            </li>\n          ))}\n      </ul>\n    </div>\n  );\n};\n\nexport default Select;\n","import React, { useMemo } from \"react\";\nimport classNames from \"classnames\";\nimport Button from \"../inputs/Button\";\nimport { Formik, Form, Field, ErrorMessage } from \"formik\";\nimport Input from \"../../components/inputs/Input\";\nimport ComboBox from \"../inputs/ComboBox\";\nimport Select from \"../inputs/Select\";\nimport { MdErrorOutline } from \"react-icons/md\";\nimport RingLoader from \"@bit/davidhu2000.react-spinners.ring-loader\";\nimport styles from \"./FormRenderer.module.scss\";\n\nconst inputTypes = {\n  select: Select,\n  combobox: ComboBox,\n  \"*\": Input,\n};\n\nconst FormRenderer = ({ config, onSubmit, loading }) => {\n  const initialValues = useMemo(\n    () =>\n      config.fields.reduce((acc, field) => {\n        acc[field.name] = field.initialValue || \"\";\n        return acc;\n      }, {}),\n    [config]\n  );\n\n  return (\n    <Formik\n      validationSchema={config.validation}\n      initialValues={initialValues}\n      onSubmit={onSubmit}\n    >\n      {({ setFieldValue }) => (\n        <Form className={classNames(styles.form, config.className)}>\n          {config.fields.map(({ className, name, type, ...inputProps }) => (\n            <div className={classNames(styles.field, className)} key={name}>\n              <Field name={name}>\n                {({ field }) => {\n                  const Component = inputTypes[type] || inputTypes[\"*\"];\n                  return (\n                    <Component\n                      key={name}\n                      type={type}\n                      {...field}\n                      {...inputProps}\n                      onChange={(value) => setFieldValue(name, value)}\n                    />\n                  );\n                }}\n              </Field>\n              <ErrorMessage name={name}>\n                {(msg) => (\n                  <div className={styles.error}>\n                    <MdErrorOutline /> {msg}\n                  </div>\n                )}\n              </ErrorMessage>\n            </div>\n          ))}\n          <Button className={styles.submitBtn} type=\"submit\" disabled={loading}>\n            <span style={{ visibility: loading ? \"hidden\" : \"visible\" }}>\n              Search\n            </span>\n            {loading && (\n              <div\n                className={styles.loader}\n                style={{\n                  position: \"absolute\",\n                  top: 10,\n                  left: \"calc(50% - 10px)\",\n                }}\n              >\n                <RingLoader\n                  size={20}\n                  color={getComputedStyle(\n                    document.documentElement\n                  ).getPropertyValue(\"--color-text-white\")}\n                />\n              </div>\n            )}\n          </Button>\n        </Form>\n      )}\n    </Formik>\n  );\n};\n\nexport default FormRenderer;\n","import axios from \"axios\";\n\nconst baseURL = \"https://everaiders.azurewebsites.net/\";\n\nconst instance = axios.create({\n  baseURL,\n  timeout: 30000,\n});\n\nexport const getPlanetData = () => instance.get(\"/api/planets\");\n\nexport const getFilters = () => instance.get(\"/api/Planets/filters\");\n\nexport const getResources = ({\n  resourceType,\n  richness,\n  region: { id, name } = {},\n}) =>\n  instance.get(\n    `/api/Planets/resources/${resourceType.replace(/\\s+/g, \"\")}/${richness}`,\n    {\n      params: { regionId: id },\n    }\n  );\n","import React, { useState, useMemo } from \"react\";\nimport Table from \"../../components/Table\";\nimport FormRenderer from \"../../components/FormRenderer\";\nimport { getFilters, getResources } from \"../../api\";\nimport { useQuery } from \"react-query\";\nimport * as Yup from \"yup\";\nimport styles from \"./ResourceSearch.module.scss\";\n\nconst ResourceSearchSchema = Yup.object().shape({\n  resourceType: Yup.string().required(\"Resource Type is required\"),\n  richness: Yup.string().required(\"Richness is required\"),\n});\n\nconst ResourceSearch = () => {\n  const [data, setData] = useState([]);\n  const [error, setError] = useState();\n  const [loading, setLoading] = useState(false);\n\n  const getData = (values) => {\n    setLoading(true);\n    getResources(values)\n      .then(({ data }) => {\n        setData(data);\n      })\n      .catch((e) => {\n        setError(e);\n      })\n      .finally(() => setLoading(false));\n  };\n\n  const columns = useMemo(\n    () => [\n      {\n        Header: \"Jumps\",\n        accessor: \"distanceFromBase\",\n        style: {\n          textAlign: \"right\",\n        },\n      },\n      {\n        Header: \"Planet Name\",\n        accessor: \"planetName\",\n        style: {\n          textAlign: \"left\",\n        },\n      },\n      {\n        Header: \"Resource Type\",\n        accessor: \"resourceType\",\n        Cell: ({ value }) => value.replace(/([A-Z])/g, \" $1\").trim(),\n        style: {\n          textAlign: \"left\",\n        },\n      },\n      {\n        Header: \"Richness\",\n        accessor: \"richness\",\n        style: {\n          textAlign: \"left\",\n        },\n      },\n    ],\n    []\n  );\n\n  const {\n    loading: filtersLoading,\n    error: filtersError,\n    data: filtersTypesData,\n  } = useQuery(\"filters\", getFilters);\n\n  const { regions = [], richness = [], types = [] } = useMemo(\n    () => (filtersTypesData ? filtersTypesData.data : []),\n    [filtersTypesData]\n  );\n\n  const resourceTypeOptions = useMemo(\n    () => types.map((type) => type.replace(/([A-Z])/g, \" $1\").trim()),\n    [types]\n  );\n\n  if (filtersLoading) return \"Loading...\";\n\n  if (filtersError) return \"An error has occurred: \" + filtersError.message;\n\n  const formConfig = {\n    validation: ResourceSearchSchema,\n    className: styles.resourceSearchForm,\n    fields: [\n      {\n        name: \"resourceType\",\n        label: \"Resource Type\",\n        placeholder: \"resource type\",\n        type: \"combobox\",\n        items: resourceTypeOptions,\n        className: styles.resourceType,\n      },\n      {\n        name: \"richness\",\n        label: \"Richness\",\n        placeholder: \"Select a richness\",\n        items: richness,\n        type: \"select\",\n        className: styles.richness,\n      },\n      {\n        name: \"region\",\n        label: \"Region\",\n        placeholder: \"Select a region\",\n        items: regions,\n        type: \"combobox\",\n        itemToString: (item) => item?.name ?? \"\",\n        className: styles.region,\n      },\n    ],\n  };\n\n  return (\n    <div className={styles.resourceSearch}>\n      <div className={styles.results}>\n        {error && (\n          <div className={styles.error}>\n            An error occured. Please try again.\n          </div>\n        )}\n        <Table\n          data={data}\n          columns={columns}\n          placeholder=\"No data for selected filters\"\n        />\n      </div>\n      <header className={styles.header}>\n        <h1>Find Resources</h1>\n        <FormRenderer\n          config={formConfig}\n          onSubmit={getData}\n          loading={loading}\n        />\n      </header>\n    </div>\n  );\n};\n\nexport default ResourceSearch;\n","import React from \"react\";\n\nconst UnderDevelopment = () => (\n  <div style={{ marginTop: 20 }}>\n    Feature currently under development. Come back later!\n  </div>\n);\n\nexport default UnderDevelopment;\n","import React from \"react\";\nimport classNames from \"classnames\";\nimport styles from \"./NavItem.module.scss\";\n\nconst NavItem = ({ selected, onClick, logo: Logo, label }) => (\n  <div\n    className={classNames(styles.navItem, { [styles.active]: selected })}\n    onClick={() => onClick()}\n  >\n    <div className={styles.logo}>\n      <Logo />\n    </div>\n    <div className={styles.label}>{label}</div>\n  </div>\n);\n\nexport default NavItem;\n","import React from \"react\";\nimport { GiMining } from \"react-icons/gi\";\nimport { IoMdPlanet } from \"react-icons/io\";\nimport NavItem from \"./NavItem\";\nimport styles from \"./NavBar.module.scss\";\n\nconst navItems = [\n  {\n    name: \"resource-search\",\n    label: \"Resource Search\",\n    logo: GiMining,\n  },\n  {\n    name: \"planet-search\",\n    label: \"Planet Search\",\n    logo: IoMdPlanet,\n  },\n];\n\nconst NavBar = ({ route, setRoute }) => (\n  <div className={styles.navBar}>\n    <img\n      className={styles.logo}\n      src={`${process.env.PUBLIC_URL}/logo.png`}\n      alt=\"raiders logo\"\n    />\n    {navItems.map((item) => (\n      <NavItem\n        key={item.name}\n        selected={route === item.name}\n        onClick={() => setRoute(item.name)}\n        logo={item.logo}\n        label={item.label}\n      />\n    ))}\n  </div>\n);\n\nexport default NavBar;\n","import React, { useState } from \"react\";\nimport ResourceSearch from \"./ResourceSearch\";\nimport UnderDevelopment from \"./UnderDevelopment\";\nimport NavBar from \"./NavBar\";\nimport styles from \"./Dashboard.module.scss\";\n\nconst routes = {\n  \"resource-search\": ResourceSearch,\n  \"*\": UnderDevelopment,\n};\n\nconst Dashboard = () => {\n  const [selectedRoute, setSelectedRoute] = useState(\"resource-search\");\n\n  const Component = routes[selectedRoute] || routes[\"*\"];\n\n  return (\n    <div className={styles.dashboard}>\n      <NavBar route={selectedRoute} setRoute={setSelectedRoute} />\n      <Component />\n    </div>\n  );\n};\n\nexport default Dashboard;\n","import React from \"react\";\nimport Dashboard from \"./Dashboard\";\nimport { ReactQueryDevtools } from \"react-query-devtools\";\nimport \"./App.scss\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <ReactQueryDevtools initialIsOpen={false} />\n      <Dashboard />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener(\"load\", () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            \"This web app is being served cache-first by a service \" +\n              \"worker. To learn more, visit https://bit.ly/CRA-PWA\"\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === \"installed\") {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                \"New content is available and will be used when all \" +\n                  \"tabs for this page are closed. See https://bit.ly/CRA-PWA.\"\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log(\"Content is cached for offline use.\");\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error(\"Error during service worker registration:\", error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { \"Service-Worker\": \"script\" },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get(\"content-type\");\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf(\"javascript\") === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        \"No internet connection found. App is running in offline mode.\"\n      );\n    });\n}\n\nexport function unregister() {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.scss\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"tableWrapper\":\"Table_tableWrapper__tZooT\",\"table\":\"Table_table__2OuB7\",\"headers\":\"Table_headers__M46s0\",\"headerCell\":\"Table_headerCell__1nTkK\",\"body\":\"Table_body__3kRrD\",\"cell\":\"Table_cell__2s5cE\",\"placeholder\":\"Table_placeholder__3cRb7\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"combobox\":\"Select_combobox__2fVaR\",\"inputWrapper\":\"Select_inputWrapper__2jpws\",\"input\":\"Select_input__3xpvd\",\"dropdownIcon\":\"Select_dropdownIcon__Emqpy\",\"menu\":\"Select_menu__3w-dz\",\"open\":\"Select_open__gibbM\",\"item\":\"Select_item__3YpSq\",\"highlighted\":\"Select_highlighted__cGxYx\",\"placeholder\":\"Select_placeholder__VZlSA\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"resourceSearch\":\"ResourceSearch_resourceSearch__34jlA\",\"header\":\"ResourceSearch_header__iMR0J\",\"results\":\"ResourceSearch_results__1Efvc\",\"resourceSearchForm\":\"ResourceSearch_resourceSearchForm__280Hw\",\"resourceType\":\"ResourceSearch_resourceType__1elrh\",\"richness\":\"ResourceSearch_richness__L3K6U\",\"error\":\"ResourceSearch_error__3Wevm\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"combobox\":\"ComboBox_combobox__vKPv6\",\"input\":\"ComboBox_input__32-1j\",\"menu\":\"ComboBox_menu__1H2fX\",\"open\":\"ComboBox_open__2oJ2D\",\"dropdownIcon\":\"ComboBox_dropdownIcon__2yDOs\",\"item\":\"ComboBox_item__1aND1\",\"highlighted\":\"ComboBox_highlighted__dIQ44\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"FormRenderer_form__1oXro\",\"field\":\"FormRenderer_field__2ebEy\",\"error\":\"FormRenderer_error__3EXkk\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"navItem\":\"NavItem_navItem__Mxr-P\",\"hover\":\"NavItem_hover__2jylu\",\"active\":\"NavItem_active__BRtlX\",\"label\":\"NavItem_label__NjeuJ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"inputWrapper\":\"BaseInput_inputWrapper__1QLek\",\"hover\":\"BaseInput_hover__fgPLf\",\"active\":\"BaseInput_active__3J2K6\",\"label\":\"BaseInput_label__ljkWO\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"navBar\":\"NavBar_navBar__cg89M\",\"logo\":\"NavBar_logo__1hftJ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"Button_button__3Dwi5\",\"hover\":\"Button_hover__2_H-W\",\"active\":\"Button_active__19R-U\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"input\":\"Input_input__1NUtq\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dashboard\":\"Dashboard_dashboard__1wLSR\"};"],"sourceRoot":""}